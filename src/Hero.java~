public class Hero extends Creature {
	{
		setAttack(1);
		setDefense(0);
		setHealth(10);
		setName("Hero");
		setGold(0);
	}

	private Weapon weapon;

	private Armor armor;

	private int numPotions = 0;

	public int getAttack() {
		int base = super.getAttack();
		int added = (weapon != null) ? weapon.getAttack() : 0;
		return base + added;	
	}		
	
	public int getDefense() {
		int base = super.getDefense();
		int added = (armor != null) ? armor.getArmor() : 0;
		return base + added;
	}

	public void setWeapon(Weapon weapon) {
		this.weapon = weapon;
	}

	public void setArmor(Armor armor) {
		this.armor = armor;
	}

	public int getNumPotions() {
		return numPotions;
	}

	public void setNumPotions(int numPotions) throws IllegalArgumentException {
		if (numPotions < 0) throw new IllegalArgumentException("");
		this.numPotions = numPotions;
	}

	public void useItem() {
		try {
			setNumPotions(getNumPotions() - 1);
			setHealth(10);
		} catch (IllegalArgumentException e) {
			System.out.println("\nYou do not have anymore potions");
		}
	}

	public void upgradeHero(Item item) {
		if (item instanceof Weapon) {
			Weapon weapon = (Weapon)item;
			setWeapon(weapon);
		} else if (item instanceof Armor) {
			Armor armor = (Armor)item;
			setArmor(armor);
		} else {
			setNumPotions(getNumPotions() + 1);
		}
	}
	
	public static void buyItem(Item item) {
		if (getGold() < item.getCost()) {
			System.out.println("\nYou do not have enough gold for this item");
		} else {
			System.out.println("\nYou have bought a " + item.getName());		
			setGold(getGold() - item.getCost());
			upgradeHero(item);
		}
	}	
}

